@using Bookflix.Data.Cart
@model ShoppingCart

@{
    ViewData["Title"] = "Shopping cart";
    decimal total = 0;
}


<div class="row">
    <div class="col-md-8 offset-2">
        <div class="text-center">

            <h2>your shopping cart summary</h2>
            <table class="table">
                <thead>
                    <tr>
                        <th>Amount</th>
                        <th>Book name</th>
                        <th>Price</th>
                        <th>Subtotal</th>
                        <th></th>
                    </tr>

                </thead>
                <tbody>
                    @foreach(var item in Model.shoppingCartItems) {
                        total += item.Amount * item.Book.Price;
                        <tr>
                            <td class="align-middle">@item.Amount</td>
                            <td class="align-middle">@item.Book.Title</td>
                            <td class="align-middle">@item.Book.Price.ToString("c")</td>
                            <td class="align-middle">@((item.Amount* item.Book.Price).ToString("c"))</td>
                            <td class="align-middle">
                                <a class="text-danger" asp-controller="Orders" asp-action="RemoveItemFromShoppingCart"
                                asp-route-id="@item.Book.ISBN"><i class="bi bi-cart-dash"></i> </a>
                                <a class="text-success" asp-controller="Orders" asp-action="AddItemToShoppingCart"
                                asp-route-id="@item.Book.ISBN"><i class="bi bi-cart-plus"></i> </a>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="2"></td>
                        <td><b>Total:</b></td>
                        <td>@total.ToString("c")</td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>

            <div class="text-right">
                <div class="btn-group">
@*                    <a class="btn btn-outline-success" asp-action="CompleteOrder">
                        Complete Order
                    </a>*@
                    <div style="margin-bottom: 40px" id="paypal-btn">
                    @*<span style="padding:50px"></span>*@
                    </div>
                    <a class="Back-To-List" asp-controller="Book" asp-action="Index">
                        <i class="bi bi-arrow-left"></i>Back to List
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script src="https://www.paypalobjects.com/api/checkout.js">
        </script>
    <script>
        let total = @Html.Raw(@total);


        paypal.Button.render({
        env:"sandbox",
        client:{
            sandbox:"ATIHFvCIzYJmX2nJh7PRg_hkqOFl9rbUzarRDIF1YZ5NzJ6HAEIdvf3xJz05B_3_KFbq_9NnC6QfLpcp"
        },
        locale:"en_US",
        style:{
            size:'small',
            color:'gold',
            shape:'pill'
        },
        commit:true,
        payment:function(data,actions){
            return actions.payment.create({
                transactions :[{
                    amount:{
                        total: total,
                        currency:'USD'
                    }
                }]
            });
        },
        onAuthorize:function(data,actions){
            return actions.payment.execute().then(function(){
            var url ='@Url.Action("CompleteOrder","Orders",new{})';
            window.location.href = url;
            })
        }
        },'#paypal-btn');
    </script>

  @*  <script>
        paypal.Button.render({
            // Configure environment
            env: 'sandbox',
            client: {
            sandbox: 'ATIHFvCIzYJmX2nJh7PRg_hkqOFl9rbUzarRDIF1YZ5NzJ6HAEIdvf3xJz05B_3_KFbq_9NnC6QfLpcp',
            },
            // Customize button (optional)
            locale: 'en_US',
            style: {
                layout: "horizontal",
                color: "black",
                shape: "rect",
                label: "paypal",
                tagline: false,
                height: 40,
            },
            // Enable Pay Now checkout flow (optional)
            commit: true,
            // Set up a payment
            payment: function(data, actions) {
            return actions.payment.create({
                transactions: [{
                amount: {
                    total: @Model.ShoppingCartTotal.ToString(),
                    currency: 'USD',
                }
                }]
            });
            },
            // Execute the payment
            onAuthorize: function(data, actions) {
            return actions.payment.execute().then(function() {

                let city = $('#address-city').val();
                let street = $('#address-street').val();
                let streetnumber = $('#address-streetnumber').val();
                let floornumber = $('#address-floornumber').val();

                $.ajax({
                    type: "POST",
                    url: "FinalizeOrder",
                    data: {
                        City: city,
                        Street: street,
                        StreetNumber: parseInt( streetnumber),
                        FloorNumber: parseInt(floornumber),
                    },
                    success: function(resultData){
                        var url = '@Url.Action("ShoppingCart", "Orders", new { })';
                        window.location.href = url;
                    },
                });
            });
            }
        }, '#paypal-btn');
    </script>*@
}